; Listing generated by Microsoft (R) Optimizing Compiler Version 19.14.26433.0 

	TITLE	C:\Users\yfedas21\source\repos\msdn_example\msdn_example\main.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_printf
PUBLIC	_main
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_0CC@BCKCCGII@WSAStartup?5failed?5with?5error?3?5?$CFd@ ; `string'
PUBLIC	??_C@_05GDDNCJNM@27015?$AA@			; `string'
PUBLIC	??_C@_0CD@PCLIBDOM@getaddrinfo?5failed?5with?5error?3?5?$CF@ ; `string'
PUBLIC	??_C@_0BP@NEBLOEJI@socket?5failed?5with?5error?3?5?$CFld?6?$AA@ ; `string'
PUBLIC	??_C@_0BM@CHGDJINB@bind?5failed?5with?5error?3?5?$CFd?6?$AA@ ; `string'
PUBLIC	??_C@_0BO@GILDKHED@listen?5failed?5with?5error?3?5?$CFd?6?$AA@ ; `string'
PUBLIC	??_C@_0BO@FNPDDJPB@accept?5failed?5with?5error?3?5?$CFd?6?$AA@ ; `string'
PUBLIC	??_C@_0BE@PLKHFJOE@Bytes?5received?3?5?$CFd?6?$AA@ ; `string'
PUBLIC	??_C@_0BM@JOEKAJND@send?5failed?5with?5error?3?5?$CFd?6?$AA@ ; `string'
PUBLIC	??_C@_0BA@GPNCEAEE@Bytes?5sent?3?5?$CFd?6?$AA@	; `string'
PUBLIC	??_C@_0BH@LEFOJBEK@Connection?5closing?4?4?4?6?$AA@ ; `string'
PUBLIC	??_C@_0BM@MPCOOIAI@recv?5failed?5with?5error?3?5?$CFd?6?$AA@ ; `string'
PUBLIC	??_C@_0CA@HCCMPOIB@shutdown?5failed?5with?5error?3?5?$CFd?6?$AA@ ; `string'
EXTRN	_memset:PROC
EXTRN	__imp__accept@12:PROC
EXTRN	__imp__bind@12:PROC
EXTRN	__imp__closesocket@4:PROC
EXTRN	__imp__listen@8:PROC
EXTRN	__imp__recv@16:PROC
EXTRN	__imp__send@16:PROC
EXTRN	__imp__shutdown@8:PROC
EXTRN	__imp__socket@12:PROC
EXTRN	__imp__WSAStartup@8:PROC
EXTRN	__imp__WSACleanup@0:PROC
EXTRN	__imp__WSAGetLastError@0:PROC
EXTRN	__imp__getaddrinfo@16:PROC
EXTRN	__imp__freeaddrinfo@4:PROC
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp____stdio_common_vfprintf:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_0CA@HCCMPOIB@shutdown?5failed?5with?5error?3?5?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0CA@HCCMPOIB@shutdown?5failed?5with?5error?3?5?$CFd?6?$AA@ DB 'shut'
	DB	'down failed with error: %d', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@MPCOOIAI@recv?5failed?5with?5error?3?5?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0BM@MPCOOIAI@recv?5failed?5with?5error?3?5?$CFd?6?$AA@ DB 'recv fai'
	DB	'led with error: %d', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@LEFOJBEK@Connection?5closing?4?4?4?6?$AA@
CONST	SEGMENT
??_C@_0BH@LEFOJBEK@Connection?5closing?4?4?4?6?$AA@ DB 'Connection closin'
	DB	'g...', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@GPNCEAEE@Bytes?5sent?3?5?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0BA@GPNCEAEE@Bytes?5sent?3?5?$CFd?6?$AA@ DB 'Bytes sent: %d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@JOEKAJND@send?5failed?5with?5error?3?5?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0BM@JOEKAJND@send?5failed?5with?5error?3?5?$CFd?6?$AA@ DB 'send fai'
	DB	'led with error: %d', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@PLKHFJOE@Bytes?5received?3?5?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0BE@PLKHFJOE@Bytes?5received?3?5?$CFd?6?$AA@ DB 'Bytes received: %d'
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@FNPDDJPB@accept?5failed?5with?5error?3?5?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0BO@FNPDDJPB@accept?5failed?5with?5error?3?5?$CFd?6?$AA@ DB 'accept'
	DB	' failed with error: %d', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@GILDKHED@listen?5failed?5with?5error?3?5?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0BO@GILDKHED@listen?5failed?5with?5error?3?5?$CFd?6?$AA@ DB 'listen'
	DB	' failed with error: %d', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@CHGDJINB@bind?5failed?5with?5error?3?5?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0BM@CHGDJINB@bind?5failed?5with?5error?3?5?$CFd?6?$AA@ DB 'bind fai'
	DB	'led with error: %d', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@NEBLOEJI@socket?5failed?5with?5error?3?5?$CFld?6?$AA@
CONST	SEGMENT
??_C@_0BP@NEBLOEJI@socket?5failed?5with?5error?3?5?$CFld?6?$AA@ DB 'socke'
	DB	't failed with error: %ld', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@PCLIBDOM@getaddrinfo?5failed?5with?5error?3?5?$CF@
CONST	SEGMENT
??_C@_0CD@PCLIBDOM@getaddrinfo?5failed?5with?5error?3?5?$CF@ DB 'getaddri'
	DB	'nfo failed with error: %d', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05GDDNCJNM@27015?$AA@
CONST	SEGMENT
??_C@_05GDDNCJNM@27015?$AA@ DB '27015', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@BCKCCGII@WSAStartup?5failed?5with?5error?3?5?$CFd@
CONST	SEGMENT
??_C@_0CC@BCKCCGII@WSAStartup?5failed?5with?5error?3?5?$CFd@ DB 'WSAStart'
	DB	'up failed with error: %d', 0aH, 00H		; `string'
CONST	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _main
_TEXT	SEGMENT
_size_of_hints$ = -1052					; size = 4
_recvbuflen$ = -1040					; size = 4
_recvbuf$ = -1028					; size = 512
_iSendResult$ = -508					; size = 4
_hints$ = -496						; size = 32
_result$ = -456						; size = 4
_ClientSocket$ = -444					; size = 4
_ListenSocket$ = -432					; size = 4
_iResult$ = -420					; size = 4
_wsaData$ = -408					; size = 400
__$ArrayPad$ = -4					; size = 4
_main	PROC						; COMDAT
; File c:\users\yfedas21\source\repos\msdn_example\msdn_example\main.cpp
; Line 19
	push	ebp
	mov	ebp, esp
	sub	esp, 1632				; 00000660H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1632]
	mov	ecx, 408				; 00000198H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 23
	mov	DWORD PTR _ListenSocket$[ebp], -1
; Line 24
	mov	DWORD PTR _ClientSocket$[ebp], -1
; Line 26
	mov	DWORD PTR _result$[ebp], 0
; Line 31
	mov	DWORD PTR _recvbuflen$[ebp], 512	; 00000200H
; Line 34
	mov	esi, esp
	lea	eax, DWORD PTR _wsaData$[ebp]
	push	eax
	push	514					; 00000202H
	call	DWORD PTR __imp__WSAStartup@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _iResult$[ebp], eax
; Line 35
	cmp	DWORD PTR _iResult$[ebp], 0
	je	SHORT $LN5@main
; Line 36
	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	push	OFFSET ??_C@_0CC@BCKCCGII@WSAStartup?5failed?5with?5error?3?5?$CFd@
	call	_printf
	add	esp, 8
; Line 37
	mov	eax, 1
	jmp	$LN1@main
$LN5@main:
; Line 40
	mov	DWORD PTR _size_of_hints$[ebp], 32	; 00000020H
; Line 42
	push	32					; 00000020H
	push	0
	lea	eax, DWORD PTR _hints$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 43
	mov	DWORD PTR _hints$[ebp+4], 2
; Line 44
	mov	DWORD PTR _hints$[ebp+8], 1
; Line 45
	mov	DWORD PTR _hints$[ebp+12], 6
; Line 46
	mov	DWORD PTR _hints$[ebp], 1
; Line 49
	mov	esi, esp
	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	lea	ecx, DWORD PTR _hints$[ebp]
	push	ecx
	push	OFFSET ??_C@_05GDDNCJNM@27015?$AA@
	push	0
	call	DWORD PTR __imp__getaddrinfo@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _iResult$[ebp], eax
; Line 50
	cmp	DWORD PTR _iResult$[ebp], 0
	je	SHORT $LN6@main
; Line 51
	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	push	OFFSET ??_C@_0CD@PCLIBDOM@getaddrinfo?5failed?5with?5error?3?5?$CF@
	call	_printf
	add	esp, 8
; Line 52
	mov	esi, esp
	call	DWORD PTR __imp__WSACleanup@0
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 53
	mov	eax, 1
	jmp	$LN1@main
$LN6@main:
; Line 57
	mov	esi, esp
	mov	eax, DWORD PTR _result$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _result$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__socket@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ListenSocket$[ebp], eax
; Line 58
	cmp	DWORD PTR _ListenSocket$[ebp], -1
	jne	SHORT $LN7@main
; Line 59
	mov	esi, esp
	call	DWORD PTR __imp__WSAGetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	OFFSET ??_C@_0BP@NEBLOEJI@socket?5failed?5with?5error?3?5?$CFld?6?$AA@
	call	_printf
	add	esp, 8
; Line 60
	mov	esi, esp
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	DWORD PTR __imp__freeaddrinfo@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 61
	mov	esi, esp
	call	DWORD PTR __imp__WSACleanup@0
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 62
	mov	eax, 1
	jmp	$LN1@main
$LN7@main:
; Line 66
	mov	esi, esp
	mov	eax, DWORD PTR _result$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _result$[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	mov	ecx, DWORD PTR _ListenSocket$[ebp]
	push	ecx
	call	DWORD PTR __imp__bind@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _iResult$[ebp], eax
; Line 67
	cmp	DWORD PTR _iResult$[ebp], -1
	jne	SHORT $LN8@main
; Line 68
	mov	esi, esp
	call	DWORD PTR __imp__WSAGetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	OFFSET ??_C@_0BM@CHGDJINB@bind?5failed?5with?5error?3?5?$CFd?6?$AA@
	call	_printf
	add	esp, 8
; Line 69
	mov	esi, esp
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	DWORD PTR __imp__freeaddrinfo@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 70
	mov	esi, esp
	mov	eax, DWORD PTR _ListenSocket$[ebp]
	push	eax
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 71
	mov	esi, esp
	call	DWORD PTR __imp__WSACleanup@0
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 72
	mov	eax, 1
	jmp	$LN1@main
$LN8@main:
; Line 75
	mov	esi, esp
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	DWORD PTR __imp__freeaddrinfo@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 77
	mov	esi, esp
	push	2147483647				; 7fffffffH
	mov	eax, DWORD PTR _ListenSocket$[ebp]
	push	eax
	call	DWORD PTR __imp__listen@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _iResult$[ebp], eax
; Line 78
	cmp	DWORD PTR _iResult$[ebp], -1
	jne	SHORT $LN9@main
; Line 79
	mov	esi, esp
	call	DWORD PTR __imp__WSAGetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	OFFSET ??_C@_0BO@GILDKHED@listen?5failed?5with?5error?3?5?$CFd?6?$AA@
	call	_printf
	add	esp, 8
; Line 80
	mov	esi, esp
	mov	eax, DWORD PTR _ListenSocket$[ebp]
	push	eax
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 81
	mov	esi, esp
	call	DWORD PTR __imp__WSACleanup@0
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 82
	mov	eax, 1
	jmp	$LN1@main
$LN9@main:
; Line 86
	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR _ListenSocket$[ebp]
	push	eax
	call	DWORD PTR __imp__accept@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ClientSocket$[ebp], eax
; Line 87
	cmp	DWORD PTR _ClientSocket$[ebp], -1
	jne	SHORT $LN10@main
; Line 88
	mov	esi, esp
	call	DWORD PTR __imp__WSAGetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	OFFSET ??_C@_0BO@FNPDDJPB@accept?5failed?5with?5error?3?5?$CFd?6?$AA@
	call	_printf
	add	esp, 8
; Line 89
	mov	esi, esp
	mov	eax, DWORD PTR _ListenSocket$[ebp]
	push	eax
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 90
	mov	esi, esp
	call	DWORD PTR __imp__WSACleanup@0
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 91
	mov	eax, 1
	jmp	$LN1@main
$LN10@main:
; Line 95
	mov	esi, esp
	mov	eax, DWORD PTR _ListenSocket$[ebp]
	push	eax
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@main:
; Line 100
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _recvbuflen$[ebp]
	push	eax
	lea	ecx, DWORD PTR _recvbuf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ClientSocket$[ebp]
	push	edx
	call	DWORD PTR __imp__recv@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _iResult$[ebp], eax
; Line 101
	cmp	DWORD PTR _iResult$[ebp], 0
	jle	$LN11@main
; Line 102
	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	push	OFFSET ??_C@_0BE@PLKHFJOE@Bytes?5received?3?5?$CFd?6?$AA@
	call	_printf
	add	esp, 8
; Line 105
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _iResult$[ebp]
	push	eax
	lea	ecx, DWORD PTR _recvbuf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ClientSocket$[ebp]
	push	edx
	call	DWORD PTR __imp__send@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _iSendResult$[ebp], eax
; Line 106
	cmp	DWORD PTR _iSendResult$[ebp], -1
	jne	SHORT $LN13@main
; Line 107
	mov	esi, esp
	call	DWORD PTR __imp__WSAGetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	OFFSET ??_C@_0BM@JOEKAJND@send?5failed?5with?5error?3?5?$CFd?6?$AA@
	call	_printf
	add	esp, 8
; Line 108
	mov	esi, esp
	mov	eax, DWORD PTR _ClientSocket$[ebp]
	push	eax
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 109
	mov	esi, esp
	call	DWORD PTR __imp__WSACleanup@0
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 110
	mov	eax, 1
	jmp	$LN1@main
$LN13@main:
; Line 112
	mov	eax, DWORD PTR _iSendResult$[ebp]
	push	eax
	push	OFFSET ??_C@_0BA@GPNCEAEE@Bytes?5sent?3?5?$CFd?6?$AA@
	call	_printf
	add	esp, 8
	jmp	SHORT $LN2@main
$LN11@main:
; Line 114
	cmp	DWORD PTR _iResult$[ebp], 0
	jne	SHORT $LN14@main
; Line 115
	push	OFFSET ??_C@_0BH@LEFOJBEK@Connection?5closing?4?4?4?6?$AA@
	call	_printf
	add	esp, 4
; Line 116
	jmp	SHORT $LN2@main
$LN14@main:
; Line 117
	mov	esi, esp
	call	DWORD PTR __imp__WSAGetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	OFFSET ??_C@_0BM@MPCOOIAI@recv?5failed?5with?5error?3?5?$CFd?6?$AA@
	call	_printf
	add	esp, 8
; Line 118
	mov	esi, esp
	mov	eax, DWORD PTR _ClientSocket$[ebp]
	push	eax
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 119
	mov	esi, esp
	call	DWORD PTR __imp__WSACleanup@0
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 120
	mov	eax, 1
	jmp	$LN1@main
$LN2@main:
; Line 123
	cmp	DWORD PTR _iResult$[ebp], 0
	jg	$LN4@main
; Line 126
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _ClientSocket$[ebp]
	push	eax
	call	DWORD PTR __imp__shutdown@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _iResult$[ebp], eax
; Line 127
	cmp	DWORD PTR _iResult$[ebp], -1
	jne	SHORT $LN16@main
; Line 128
	mov	esi, esp
	call	DWORD PTR __imp__WSAGetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	OFFSET ??_C@_0CA@HCCMPOIB@shutdown?5failed?5with?5error?3?5?$CFd?6?$AA@
	call	_printf
	add	esp, 8
; Line 129
	mov	esi, esp
	mov	eax, DWORD PTR _ClientSocket$[ebp]
	push	eax
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 130
	mov	esi, esp
	call	DWORD PTR __imp__WSACleanup@0
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 131
	mov	eax, 1
	jmp	SHORT $LN1@main
$LN16@main:
; Line 135
	mov	esi, esp
	mov	eax, DWORD PTR _ClientSocket$[ebp]
	push	eax
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 136
	mov	esi, esp
	call	DWORD PTR __imp__WSACleanup@0
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 138
	xor	eax, eax
$LN1@main:
; Line 139
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN23@main
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1632				; 00000660H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN23@main:
	DD	4
	DD	$LN22@main
$LN22@main:
	DD	-408					; fffffe68H
	DD	400					; 00000190H
	DD	$LN18@main
	DD	-456					; fffffe38H
	DD	4
	DD	$LN19@main
	DD	-496					; fffffe10H
	DD	32					; 00000020H
	DD	$LN20@main
	DD	-1028					; fffffbfcH
	DD	512					; 00000200H
	DD	$LN21@main
$LN21@main:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	118					; 00000076H
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN20@main:
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
$LN19@main:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
$LN18@main:
	DB	119					; 00000077H
	DB	115					; 00000073H
	DB	97					; 00000061H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _printf
_TEXT	SEGMENT
__ArgList$ = -20					; size = 4
__Result$ = -8						; size = 4
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\stdio.h
; Line 954
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 957
	lea	eax, DWORD PTR __Format$[ebp+4]
	mov	DWORD PTR __ArgList$[ebp], eax
; Line 958
	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR __Format$[ebp]
	push	ecx
	mov	esi, esp
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	__vfprintf_l
	add	esp, 16					; 00000010H
	mov	DWORD PTR __Result$[ebp], eax
; Line 959
	mov	DWORD PTR __ArgList$[ebp], 0
; Line 960
	mov	eax, DWORD PTR __Result$[ebp]
; Line 961
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\stdio.h
; Line 642
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 643
	mov	esi, esp
	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	mov	eax, DWORD PTR __Stream$[ebp]
	push	eax
	call	___local_stdio_printf_options
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 644
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_stdio_config.h
; Line 85
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 87
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 88
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
